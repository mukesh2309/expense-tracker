{"version":3,"sources":["components/AddExpense/ExpenseForm.js","components/UI/Card.js","components/AddExpense/AddExpense.js","components/Expenses/ExpenseFilter.js","components/UI/CardTwo.js","components/Expenses/ExpenseDate.js","components/UI/Test.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","e","preventDefault","data","title","amount","date","Date","onSaveExpenseData","className","htmlFor","value","type","onChange","target","onClick","onCancle","Card","classes","children","AddExpense","isEditing","setIsEditing","enteredExpenseData","Data","id","Math","random","toString","getExpense","ExpenseFilter","selected","getSelected","CardTwo","classname","ExpenseDate","month","toLocaleString","day","year","getFullYear","Test","ExpenseItem","ExpenseList","items","length","map","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","ExpenseItems","filteredYear","setFilterYear","filteredExpenses","filter","p","Initial_expenses","App","setExpenses","previousExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a64f7bc3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport './ExpenseForm.css'\r\n\r\nfunction ExpenseForm(props) {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    const titleChangeHandler = (e) => {\r\n        setEnteredTitle(e.target.value)\r\n    }\r\n    const amountChangeHandler = (e) => {\r\n        setEnteredAmount(e.target.value)\r\n    }\r\n    const dateChangeHandler = (e) => {\r\n        setEnteredDate(e.target.value)\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const data = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate),\r\n        }\r\n        props.onSaveExpenseData(data);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler} className='InputExpense'>\r\n            <div className='Form-div'>\r\n                <label htmlFor=\"\">Title</label><br />\r\n                <input value={enteredTitle} type=\"text\" onChange={titleChangeHandler} />\r\n            </div>\r\n            <div className='Form-div'>\r\n                <label htmlFor=\"\">Amount</label><br />\r\n                <input value={enteredAmount} type=\"number\" onChange={amountChangeHandler} />\r\n            </div>\r\n            <div className='Form-div'>\r\n                <label htmlFor=\"\">Date</label><br />\r\n                <input value={enteredDate} type=\"date\"\r\n                    onChange={dateChangeHandler} />\r\n            </div>\r\n            <div className='btn-div'>\r\n                <button type='button' onClick={props.onCancle}>cancle</button>\r\n                <button type='submit'>Add Expense</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ExpenseForm","import React from 'react'\r\nimport './Card.css'\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return (\r\n        <div className={classes}>\r\n            {props.children}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Card","import React, { useState } from 'react'\r\nimport ExpenseForm from './ExpenseForm'\r\nimport './AddExpense.css'\r\nimport Card from '../UI/Card'\r\n\r\nfunction AddExpense(props) {\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const onSaveExpenseHandler = (enteredExpenseData) => {\r\n        const Data = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        }\r\n        props.getExpense(Data);\r\n    };\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true)\r\n    }\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false)\r\n    }\r\n    return (\r\n        <Card className='container AddExpense'>\r\n            {!isEditing && <button onClick={startEditingHandler}>Add new expenses</button>\r\n            }\r\n            {isEditing && <ExpenseForm onSaveExpenseData={onSaveExpenseHandler} onCancle={stopEditingHandler} />}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default AddExpense","import React from 'react'\r\nimport './ExpenseFilter.css'\r\n\r\nfunction ExpenseFilter(props) {\r\n    // const changeHandler = (p) => {\r\n    //     props.getSelected(p.target.value)\r\n    // }\r\n    return (\r\n        <div className='ExpenseFilter'>\r\n            <h3 className='filter-name'>filter by year</h3>\r\n            <div className='filter-select-div'>\r\n                <select value={props.selected} onChange={(e) => props.getSelected(e.target.value)}>\r\n                    <option>2020</option>\r\n                    <option>2021</option>\r\n                    <option>2022</option>\r\n                    <option>2023</option>\r\n                    <option>2024</option>\r\n                    <option>2025</option>\r\n                    <option>2026</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseFilter","import React from 'react'\r\nimport './CardTwo.css'\r\n\r\nfunction CardTwo(props) {\r\n    const classname = 'Bg-Card ' + props.className;\r\n    return (\r\n        <div className={classname}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardTwo","import React from 'react'\r\nimport './ExpenseDate.css'\r\nimport CardTwo from '../UI/CardTwo'\r\n\r\nfunction ExpenseDate(props) {\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = props.date.getFullYear();\r\n    return (\r\n        <CardTwo className='expense-date'>\r\n            <div className='expense-month'>{month}</div>\r\n            <div className='expense-year'>{year}</div>\r\n            <div className='expense-day'>{day}</div>\r\n        </CardTwo>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate","import React from 'react'\r\nimport './Test.css'\r\n\r\nfunction Test(props) {\r\n    const classes = 'Test ' + props.className;\r\n    return (\r\n        <div className={classes}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Test","import React from \"react\"\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport './ExpenseItem.css'\r\nimport Card from '../UI/Card'\r\nimport Test from '../UI/Test'\r\nimport CardTwo from \"../UI/CardTwo\";\r\n\r\n\r\nfunction ExpenseItem(props) {\r\n    // const [title, setTitle] = useState(props.title);\r\n    // const clickHandler = () => {\r\n    //     setTitle('updated !')\r\n    // }\r\n    return (\r\n        <Card className=\"expense-item\">\r\n            <ExpenseDate date={props.date} />\r\n            <Test className=\"expense-mid\">{props.title}</Test>\r\n            <CardTwo className=\"expense-price\" >${props.amount}</CardTwo>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react'\r\nimport ExpenseItem from './ExpenseItem'\r\nimport './ExpenseList.css'\r\n\r\n\r\nfunction ExpenseList(props) {\r\n\r\n    if (props.items.length === 0) {\r\n        return <h2>\r\n            Found No Expenses\r\n        </h2>\r\n    }\r\n    return (\r\n        <ul className=\"expense-list\">\r\n            {\r\n                props.items.map((e) =>\r\n                (<ExpenseItem\r\n                    key={e.id}\r\n                    title={e.title}\r\n                    amount={e.amount}\r\n                    date={e.date}\r\n                />\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ExpenseList","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return (\r\n        <div className='chart-bar'>\r\n            <div className='chart-bar__inner'>\r\n                <div\r\n                    className='chart-bar__fill'\r\n                    style={{ height: barFillHeight }}\r\n                ></div>\r\n            </div>\r\n            <div className='chart-bar__label'>{props.label}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return (\r\n        <div className='chart'>\r\n            {props.dataPoints.map((dataPoint) => (\r\n                <ChartBar\r\n                    key={dataPoint.label}\r\n                    value={dataPoint.value}\r\n                    maxValue={totalMaximum}\r\n                    label={dataPoint.label}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n    const chartDataPoints = [\r\n        { label: 'Jan', value: 0 },\r\n        { label: 'Feb', value: 0 },\r\n        { label: 'Mar', value: 0 },\r\n        { label: 'Apr', value: 0 },\r\n        { label: 'May', value: 0 },\r\n        { label: 'Jun', value: 0 },\r\n        { label: 'Jul', value: 0 },\r\n        { label: 'Aug', value: 0 },\r\n        { label: 'Sep', value: 0 },\r\n        { label: 'Oct', value: 0 },\r\n        { label: 'Nov', value: 0 },\r\n        { label: 'Dec', value: 0 },\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react'\r\nimport './Expenses.css'\r\nimport Card from '../UI/Card'\r\nimport ExpenseFilter from './ExpenseFilter'\r\nimport ExpenseList from './ExpenseList'\r\nimport ExpensesChart from './ExpensesChart'\r\n\r\n\r\nfunction ExpenseItems(props) {\r\n\r\n    const [filteredYear, setFilterYear] = useState('2020');\r\n\r\n    const filterChangeHandler = (p) => {\r\n        setFilterYear(p)\r\n    }\r\n    const filteredExpenses = props.data.filter((expense) => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    })\r\n\r\n    return (\r\n        <Card className='expenses'>\r\n            <ExpenseFilter selected={filteredYear}\r\n                getSelected={filterChangeHandler} />\r\n            <ExpensesChart expenses={filteredExpenses} />\r\n            <ExpenseList items={filteredExpenses} />\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ExpenseItems","import React, { useState } from 'react'\nimport './App.css'\nimport AddExpense from './components/AddExpense/AddExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst Initial_expenses = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12)\n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n]\n\nconst App = () => {\n\n  const [expenses, setExpenses] = useState(Initial_expenses);\n\n\n  const getData = (e) => {\n    setExpenses((previousExpense) => {\n      return [e, ...previousExpense]\n    }\n    );\n  }\n  return (\n    <div className='container' >\n      <AddExpense getExpense={getData} />\n      <Expenses data={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}